val orders = sc.textFile("retail_db/orders")

val customers_201308 = orders.
                                    filter(order => order.split(",")(1).contains("2013-08")).
                                    map(order => order.split(",")(2).toInt)

val customers_201309 = orders.
                                    filter(order => order.split(",")(1).contains("2013-09")).
                                    map(order => order.split(",")(2).toInt)
//GET ALL THE CUSTOMERS WHO PLACED ORDERS IN 2013 AUGUST AND 2013 SEPTEMBER

val customers_201308_and_201309 = customers_201308 .intersection(customers_201309)


//GET ALL UNIQUE CUSTOMERS WHO PLACED ORDERS IN 2013 AUGUST OR 2013 SEPTEMBER

val customers_201308_union_201309 = customers_201308 .union(customers_201309)

//GET ALL CUSTOMERS WHO PLACED ORDERS IN 2013 AUGUST BUT NOT IN 2013 SEPTEMBER
val customers_201308_minus_201309 = customers_201308.map(c => (c,1)).
                                                                  leftOuterJoin(customers_201309.map(c => (c,1))).
                                                                   filter(rec => rec._2._2 == None).
                                                                   map(rec => rec._1)
